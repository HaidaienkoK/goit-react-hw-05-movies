{"version":3,"file":"static/js/186.67b231e7.chunk.js","mappings":"gLACA,EAAwB,qB,SCGXA,EAAQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OAAO,cAAGC,UAAWC,EAAd,SAA0BF,GAClC,C,gKCFYG,EAAa,mCAAG,WAAMC,GAAN,yFACJC,EAAAA,EAAAA,IAAA,4DAHb,mCAGa,kBAC6CD,IAFzC,cACrBE,EADqB,OAIrBC,EAAiBD,EAASE,KAAKC,QAJV,kBAMpBF,GANoB,2CAAH,sD,kCCIpBG,EAAaC,EAAAA,GAAAA,KAAH,uDAIVC,EAAcD,EAAAA,GAAAA,MAAH,oKASXE,EAAoBF,EAAAA,GAAAA,KAAH,6MAYjBG,EAAmBH,EAAAA,GAAAA,OAAH,yTA+DtB,EAjDe,WACb,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMpB,EAAQmB,EAAaE,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAc,OAAVtB,EAAJ,CAEA,IAAMuB,EAAmB,mCAAG,2FAC1BR,GAAa,GADa,kBAGIhB,EAAcC,GAHlB,OAGlBwB,EAHkB,OAIxBX,EAAUW,GAJc,gDAMxBP,EAAS,KAAMQ,SANS,yBAQxBV,GAAa,GARW,4EAAH,qDAWzBQ,GAb0B,CAc3B,GAAE,CAACvB,IASJ,OACE,iCACE,UAACM,EAAD,CAAYoB,SATK,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfV,EAAgB,CAAEpB,MAAO6B,EAAKE,SAAS/B,MAAMgC,QAC7CH,EAAKI,OACN,EAIG,WACE,SAACzB,EAAD,CAAa0B,KAAK,OAAOC,aAAa,MAAMC,WAAS,EAACC,KAAK,WAC3D,UAAC3B,EAAD,CAAkBwB,KAAK,SAAvB,WACE,SAACzB,EAAD,qBADF,gBAIF,SAAC6B,EAAA,EAAD,CAAY1B,OAAQA,IACnBE,IAAa,SAACyB,EAAA,EAAD,IACbvB,IAAS,SAACrB,EAAA,EAAD,CAAOC,KAAK,wCACH,IAAlBgB,EAAO4B,QAAgBxC,IAAUc,IAChC,SAACnB,EAAA,EAAD,CAAOC,KAAK,+BAInB,C,0GC1FK6C,GAAalC,EAAAA,EAAAA,IAAOmC,EAAAA,GAAPnC,CAAH,+EAOVoC,EAAapC,EAAAA,GAAAA,GAAH,mEAKH+B,EAAa,SAAC,GAAgB,IAAd1B,EAAa,EAAbA,OACrBgC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACF,EAAD,UACG/B,EAAOkC,KAAI,SAAAC,GAAK,OACf,yBACE,SAACN,EAAD,CAAYO,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAtD,SACGG,EAAMK,SAFFL,EAAME,GADA,KAStB,C","sources":["webpack://react-homework-template/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","services/fetchSearched.jsx","pages/Movies.jsx","pages/MoviesList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__9uczQ\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Error.module.css'\n\nexport const Error = ({ text }) => {\n  return <p className={css.error}>{text}</p>;\n};\n\nError.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\nconst key = 'dea2d79a9d2826570ce7fe158e8c2542';\n\nexport const fetchSearched = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${query}`\n  );\n  const searchedMovies = response.data.results;\n\n  return searchedMovies;\n};\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { MoviesList } from './MoviesList';\nimport { fetchSearched } from 'services/fetchSearched';\nimport { Loader } from '../components/Loader/Loader';\nimport { Error } from '../components/Error/Error';\nimport { useSearchParams } from 'react-router-dom';\n\nconst StyledForm = styled.form`\n  margin: 20px 0px 20px 15px;\n`;\n\nconst StyledInput = styled.input`\n  min-width: 200px;\n  max-width: 300px;\n  height: 30px;\n  border: 1px solid rgb(184, 183, 183);\n  outline: none;\n  padding-left: 8px;\n`;\n\nconst StyledButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nconst StyledFormButton = styled.button`\n  display: inline-block;\n  height: 30px;\n  color: black;\n  margin-left: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  border-radius: 5px;\n  border: 1px solid rgb(155, 154, 154);\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n`;\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query === null) return;\n\n    const handleMoviesRequest = async () => {\n      setIsLoading(true);\n      try {\n        const fetchedMovies = await fetchSearched(query);\n        setMovies(fetchedMovies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    handleMoviesRequest();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit}>\n        <StyledInput type=\"text\" autocomplete=\"off\" autoFocus name=\"query\" />\n        <StyledFormButton type=\"submit\">\n          <StyledButtonLabel>Search</StyledButtonLabel>Search\n        </StyledFormButton>\n      </StyledForm>\n      <MoviesList movies={movies} />\n      {isLoading && <Loader />}\n      {error && <Error text=\"An error occurred. Please try again\" />}\n      {movies.length === 0 && query && !isLoading && (\n        <Error text=\"Nothing found! Try again\" />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import styled from 'styled-components';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst StyledLink = styled(NavLink)`\n  color: blue;\n  &.active {\n    color: orange;\n  }\n`;\n\nconst StyledList = styled.ul`\n  margin-left: 45px;\n  line-height: 1.5;\n`;\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <StyledList>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </StyledLink>\n        </li>\n      ))}\n    </StyledList>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};\n"],"names":["Error","text","className","css","fetchSearched","query","axios","response","searchedMovies","data","results","StyledForm","styled","StyledInput","StyledButtonLabel","StyledFormButton","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","handleMoviesRequest","fetchedMovies","message","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","autocomplete","autoFocus","name","MoviesList","Loader","length","StyledLink","NavLink","StyledList","location","useLocation","map","movie","to","id","state","from","title"],"sourceRoot":""}