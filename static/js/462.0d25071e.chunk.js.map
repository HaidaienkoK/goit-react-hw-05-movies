{"version":3,"file":"static/js/462.0d25071e.chunk.js","mappings":"gLACA,EAAwB,qB,SCGXA,EAAQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OAAO,cAAGC,UAAWC,EAAd,SAA0BF,GAClC,C,iJCAYG,EAAa,mCAAG,sGACJC,EAAAA,EAAAA,IAAA,kEAHb,qCAEiB,cACrBC,EADqB,OAIrBC,EAAiBD,EAASE,KAAKC,QAJV,kBAMpBF,GANoB,2CAAH,qD,mCCCpBG,EAAgBC,EAAAA,GAAAA,GAAH,uDAkCnB,EA9Ba,WACX,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,2FAC1BN,GAAa,GADa,kBAGIV,IAHJ,OAGlBiB,EAHkB,OAIxBH,EAAUG,GAJc,gDAMxBL,EAAS,KAAMM,SANS,yBAQxBR,GAAa,GARW,4EAAH,qDAWzBM,GACD,GAAE,KAGD,iCACE,SAACV,EAAD,8BACA,SAACa,EAAA,EAAD,CAAYN,OAAQA,IACnBJ,IAAa,SAACW,EAAA,EAAD,IACbT,IAAS,SAACf,EAAA,EAAD,CAAOC,KAAK,0CAG3B,C,0GCnCKwB,GAAad,EAAAA,EAAAA,IAAOe,EAAAA,GAAPf,CAAH,+EAOVgB,EAAahB,EAAAA,GAAAA,GAAH,mEAKHY,EAAa,SAAC,GAAgB,IAAdN,EAAa,EAAbA,OACrBW,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACF,EAAD,UACGV,EAAOa,KAAI,SAAAC,GAAK,OACf,yBACE,SAACN,EAAD,CAAYO,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAtD,SACGG,EAAMK,SAFFL,EAAME,GADA,KAStB,C","sources":["webpack://react-homework-template/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","services/fetchTrending.jsx","pages/Home.jsx","pages/MoviesList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__9uczQ\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Error.module.css'\n\nexport const Error = ({ text }) => {\n  return <p className={css.error}>{text}</p>;\n};\n\nError.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","\n\nimport axios from 'axios';\n\nconst key = 'dea2d79a9d2826570ce7fe158e8c2542';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}`\n  );\n  const trendingMovies = response.data.results;\n\n  return trendingMovies;\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { fetchTrending } from 'services/fetchTrending';\nimport { Loader } from '../components/Loader/Loader';\nimport { Error } from '../components/Error/Error';\nimport { MoviesList } from './MoviesList';\n\nconst StyledHeading = styled.h2`\n  margin: 15px 0px 15px 10px;\n`;\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const handleMoviesRequest = async () => {\n      setIsLoading(true);\n      try {\n        const fetchedMovies = await fetchTrending();\n        setMovies(fetchedMovies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    handleMoviesRequest();\n  }, []);\n\n  return (\n    <>\n      <StyledHeading>Trending today</StyledHeading>\n      <MoviesList movies={movies} />\n      {isLoading && <Loader />}\n      {error && <Error text=\"An error occurred. Please try again\" />}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst StyledLink = styled(NavLink)`\n  color: blue;\n  &.active {\n    color: orange;\n  }\n`;\n\nconst StyledList = styled.ul`\n  margin-left: 45px;\n  line-height: 1.5;\n`;\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <StyledList>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </StyledLink>\n        </li>\n      ))}\n    </StyledList>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};\n"],"names":["Error","text","className","css","fetchTrending","axios","response","trendingMovies","data","results","StyledHeading","styled","useState","isLoading","setIsLoading","error","setError","movies","setMovies","useEffect","handleMoviesRequest","fetchedMovies","message","MoviesList","Loader","StyledLink","NavLink","StyledList","location","useLocation","map","movie","to","id","state","from","title"],"sourceRoot":""}