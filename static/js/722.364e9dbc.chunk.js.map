{"version":3,"file":"static/js/722.364e9dbc.chunk.js","mappings":"gLACA,EAAwB,qB,SCGXA,EAAQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OAAO,cAAGC,UAAWC,EAAd,SAA0BF,GAClC,C,4JCFYG,EAAY,mCAAG,WAAMC,GAAN,yFACHC,EAAAA,EAAAA,IAAA,6CACiBD,EADjB,oBAHb,qCAEgB,cACpBE,EADoB,OAKpBC,EAAUD,EAASE,KALC,kBAOnBD,GAPmB,2CAAH,sD,qDCInBE,EAAYC,EAAAA,GAAAA,IAAH,wJAQTC,EAAYD,EAAAA,GAAAA,IAAH,+GAOTE,EAAeF,EAAAA,GAAAA,IAAH,+EAMZG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yGAQVK,EAAaL,EAAAA,GAAAA,GAAH,mEAKVM,EAAkBN,EAAAA,GAAAA,EAAH,6CAIfO,EAAeP,EAAAA,GAAAA,OAAH,6OAiGlB,EArFqB,WAAO,IAAD,IACzB,GAAkCQ,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOX,EAAP,KAAgBgB,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,2FAC1BX,GAAa,GADa,kBAGGjB,EAAaqB,GAHhB,OAGlBQ,EAHkB,OAIxBT,EAAWS,GAJa,gDAMxBV,EAAS,KAAMW,SANS,yBAQxBb,GAAa,GARW,4EAAH,qDAWzBW,GACD,GAAE,CAACP,IAEJ,IAAMU,EAAO,IAAIC,KAAK5B,EAAQ6B,cAAcC,cAC5C,OACE,iCACE,SAACpB,EAAD,CAAcqB,KAAK,SAAnB,UACE,UAACzB,EAAD,CAAY0B,GAAIb,EAAhB,WACE,SAAC,MAAD,CAAac,MAAO,CAAEC,YAAa,KADrC,gBAMF,UAAChC,EAAD,WAC2B,OAAxBF,EAAQmC,aACP,gBACEC,IAAI,yLACJC,IAAI,WACJC,MAAM,MACNC,OAAO,SAGT,gBACEH,IAAG,oCAA+BpC,EAAQmC,aAC1CG,MAAM,MACNC,OAAO,MACPF,IAAG,oBAAerC,EAAQwC,UAI9B,UAACpC,EAAD,YACE,0BACGJ,EAAQwC,MADX,KACoBxC,EAAQ6B,aAAeF,EAAO,KADlD,QAGA,wCAAgB3B,EAAQyC,iBACxB,sCACA,uBAAIzC,EAAQ0C,YACZ,oCACA,SAACrC,EAAD,UACGL,EAAQ2C,OACL3C,EAAQ2C,OAAOC,KAAI,SAAAC,GAAK,OACtB,0BAAsBA,EAAMC,MAAjBD,EAAM5B,GADK,IAGxB,UAGPL,IAAa,SAACmC,EAAA,EAAD,IACbjC,IAAS,SAACtB,EAAA,EAAD,CAAOC,KAAK,4CAExB,UAACS,EAAD,CAAW+B,MAAO,CAAEe,cAAe,UAAnC,WACE,SAACvC,EAAD,sCACA,UAACD,EAAD,YACE,yBACE,SAACF,EAAD,CAAY0B,GAAG,OAAf,qBAEF,yBACE,SAAC1B,EAAD,CAAY0B,GAAG,UAAf,8BAIN,SAAC,KAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","services/fetchDetails.jsx","pages/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__9uczQ\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Error.module.css'\n\nexport const Error = ({ text }) => {\n  return <p className={css.error}>{text}</p>;\n};\n\nError.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\nconst key = 'dea2d79a9d2826570ce7fe158e8c2542';\n\nexport const fetchDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}`\n  );\n\n  const details = response.data;\n\n  return details;\n};\n","import { useParams, NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { fetchDetails } from 'services/fetchDetails';\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader/Loader';\nimport { Error } from '../components/Error/Error';\nimport styled from 'styled-components';\nimport { BsArrowLeft } from 'react-icons/bs';\n\nconst StyledBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n  padding-bottom: 5px;\n  border-bottom: 2px solid rgb(184, 183, 183);\n`;\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 10px;\n`;\n\nconst StyledGenres = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 5px;\n`;\n\nconst StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  &:hover {\n    color: orange;\n  }\n`;\n\nconst StyledList = styled.ul`\n  margin-left: 45px;\n  line-height: 1.5;\n`;\n\nconst StyledParagraph = styled.p`\n  margin-top: 20px;\n`;\n\nconst StyledButton = styled.button`\n  background-color: white;\n  padding: 10px;\n  outline: none;\n  text-decoration: none;\n  border: 1px solid rgb(184, 183, 183);\n  border-radius: 5px;\n  margin: 10px;\n  display: flex;\n  align-items: center;\n`;\n\nconst MovieDetails = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [details, setDetails] = useState({});\n  const { id } = useParams();\n  const location = useLocation();\n  const backlinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const handleMoviesRequest = async () => {\n      setIsLoading(true);\n      try {\n        const fetchedMovie = await fetchDetails(id);\n        setDetails(fetchedMovie);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    handleMoviesRequest();\n  }, [id]);\n\n  const year = new Date(details.release_date).getFullYear();\n  return (\n    <>\n      <StyledButton type=\"button\">\n        <StyledLink to={backlinkHref}>\n          <BsArrowLeft style={{ marginRight: 5 }} />\n          Go back\n        </StyledLink>\n      </StyledButton>\n\n      <StyledBox>\n        {details.poster_path === null ? (\n          <img\n            src=\"https://img.freepik.com/free-vector/illustration-camera-icon_53876-5563.jpg?w=900&t=st=1678486874~exp=1678487474~hmac=a4f04450d41b0500a3b50c9217530014aca806126c8517f7433768454ed1572d\"\n            alt=\"No found\"\n            width=\"40%\"\n            height=\"40%\"\n          />\n        ) : (\n          <img\n            src={`//image.tmdb.org/t/p/w500/${details.poster_path}`}\n            width=\"40%\"\n            height=\"40%\"\n            alt={`Poster of ${details.title}`}\n          />\n        )}\n\n        <StyledDiv>\n          <h2>\n            {details.title} ({details.release_date ? year : null})\n          </h2>\n          <p>User Score: {details.vote_average}</p>\n          <h3>Overview</h3>\n          <p>{details.overview}</p>\n          <h4>Genres</h4>\n          <StyledGenres>\n            {details.genres\n              ? details.genres.map(genre => (\n                  <span key={genre.id}>{genre.name}</span>\n                ))\n              : null}\n          </StyledGenres>\n        </StyledDiv>\n        {isLoading && <Loader />}\n        {error && <Error text=\"An error occurred. Please try again\" />}\n      </StyledBox>\n      <StyledBox style={{ flexDirection: 'column' }}>\n        <StyledParagraph>Additional information</StyledParagraph>\n        <StyledList>\n          <li>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </li>\n          <li>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </li>\n        </StyledList>\n      </StyledBox>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Error","text","className","css","fetchDetails","movieId","axios","response","details","data","StyledBox","styled","StyledDiv","StyledGenres","StyledLink","NavLink","StyledList","StyledParagraph","StyledButton","useState","isLoading","setIsLoading","error","setError","setDetails","id","useParams","backlinkHref","useLocation","state","from","useEffect","handleMoviesRequest","fetchedMovie","message","year","Date","release_date","getFullYear","type","to","style","marginRight","poster_path","src","alt","width","height","title","vote_average","overview","genres","map","genre","name","Loader","flexDirection"],"sourceRoot":""}